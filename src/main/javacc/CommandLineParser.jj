// CommandLineParser.jj
options {
  STATIC = false;
  UNICODE_INPUT=true;
  JAVA_UNICODE_ESCAPE=true;
  /*
  DEBUG_PARSER=true;
  DEBUG_LOOKAHEAD=true;
  DEBUG_TOKEN_MANAGER=true;
  */
}

PARSER_BEGIN(CommandLineParser)
package com.manenkov.parser;

import java.io.ByteArrayInputStream;
import java.nio.charset.StandardCharsets;

public class CommandLineParser {
    public static void parse(String[] args) {
        try {
            CommandLineParser parser = new CommandLineParser(
                new ByteArrayInputStream(String.join(" ", args).getBytes(StandardCharsets.UTF_8))
            );
            parser.Command();
        } catch (ParseException e) {
          System.out.println(e.getMessage());
        } catch (Exception e) {
          e.printStackTrace();
        }
    }
}

PARSER_END(CommandLineParser)

SKIP : {
  " " | "\t" | "\n" | "\r"
}

TOKEN : { 
    < WELCOME : "welcome" >
  | < ARGUMENT : (<LETTER>|<DIGIT>)+ >
  |
  < #LETTER:
    [
        "\u0024",
        "\u0041"-"\u005a",
        "\u005f",
        "\u0061"-"\u007a",
        "\u00c0"-"\u00d6",
        "\u00d8"-"\u00f6",
        "\u00f8"-"\u00ff",
        "\u0100"-"\u1fff",
        "\u3040"-"\u318f",
        "\u3300"-"\u337f",
        "\u3400"-"\u3d2d",
        "\u4e00"-"\u9fff",
        "\uf900"-"\ufaff"
    ]
    >
|
    < #DIGIT:
    [
        "\u0030"-"\u0039",
        "\u0660"-"\u0669",
        "\u06f0"-"\u06f9",
        "\u0966"-"\u096f",
        "\u09e6"-"\u09ef",
        "\u0a66"-"\u0a6f",
        "\u0ae6"-"\u0aef",
        "\u0b66"-"\u0b6f",
        "\u0be7"-"\u0bef",
        "\u0c66"-"\u0c6f",
        "\u0ce6"-"\u0cef",
        "\u0d66"-"\u0d6f",
        "\u0e50"-"\u0e59",
        "\u0ed0"-"\u0ed9",
        "\u1040"-"\u1049"
    ]
    >
}

void Command() :
{}
{
  "command"
}
